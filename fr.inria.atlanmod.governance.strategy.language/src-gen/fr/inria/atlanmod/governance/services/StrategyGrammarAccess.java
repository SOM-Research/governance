/*
* generated by Xtext
*/

package fr.inria.atlanmod.governance.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class StrategyGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ProjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Project");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cProjectAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cProjectKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cRolesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cColonKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cRolesAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cRolesRoleParserRuleCall_4_2_0 = (RuleCall)cRolesAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cRolesAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cRolesRoleParserRuleCall_4_3_1_0 = (RuleCall)cRolesAssignment_4_3_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cDeadlinesKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cColonKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cDeadlinesAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cDeadlinesDeadlineParserRuleCall_5_2_0 = (RuleCall)cDeadlinesAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cDeadlinesAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cDeadlinesDeadlineParserRuleCall_5_3_1_0 = (RuleCall)cDeadlinesAssignment_5_3_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cRulesKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cColonKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cRulesAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cRulesRuleParserRuleCall_6_2_0 = (RuleCall)cRulesAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cRulesAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cRulesRuleParserRuleCall_6_3_1_0 = (RuleCall)cRulesAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Project:
		//
		//	{Project} "Project" name=ID "{" ("Roles" ":" roles+=Role ("," roles+=Role)*)? ("Deadlines" ":" deadlines+=Deadline
		//
		//	("," deadlines+=Deadline)*)? ("Rules" ":" rules+=Rule ("," rules+=Rule)*)? "}";
		public ParserRule getRule() { return rule; }

		//{Project} "Project" name=ID "{" ("Roles" ":" roles+=Role ("," roles+=Role)*)? ("Deadlines" ":" deadlines+=Deadline (","
		//
		//deadlines+=Deadline)*)? ("Rules" ":" rules+=Rule ("," rules+=Rule)*)? "}"
		public Group getGroup() { return cGroup; }

		//{Project}
		public Action getProjectAction_0() { return cProjectAction_0; }

		//"Project"
		public Keyword getProjectKeyword_1() { return cProjectKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("Roles" ":" roles+=Role ("," roles+=Role)*)?
		public Group getGroup_4() { return cGroup_4; }

		//"Roles"
		public Keyword getRolesKeyword_4_0() { return cRolesKeyword_4_0; }

		//":"
		public Keyword getColonKeyword_4_1() { return cColonKeyword_4_1; }

		//roles+=Role
		public Assignment getRolesAssignment_4_2() { return cRolesAssignment_4_2; }

		//Role
		public RuleCall getRolesRoleParserRuleCall_4_2_0() { return cRolesRoleParserRuleCall_4_2_0; }

		//("," roles+=Role)*
		public Group getGroup_4_3() { return cGroup_4_3; }

		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }

		//roles+=Role
		public Assignment getRolesAssignment_4_3_1() { return cRolesAssignment_4_3_1; }

		//Role
		public RuleCall getRolesRoleParserRuleCall_4_3_1_0() { return cRolesRoleParserRuleCall_4_3_1_0; }

		//("Deadlines" ":" deadlines+=Deadline ("," deadlines+=Deadline)*)?
		public Group getGroup_5() { return cGroup_5; }

		//"Deadlines"
		public Keyword getDeadlinesKeyword_5_0() { return cDeadlinesKeyword_5_0; }

		//":"
		public Keyword getColonKeyword_5_1() { return cColonKeyword_5_1; }

		//deadlines+=Deadline
		public Assignment getDeadlinesAssignment_5_2() { return cDeadlinesAssignment_5_2; }

		//Deadline
		public RuleCall getDeadlinesDeadlineParserRuleCall_5_2_0() { return cDeadlinesDeadlineParserRuleCall_5_2_0; }

		//("," deadlines+=Deadline)*
		public Group getGroup_5_3() { return cGroup_5_3; }

		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }

		//deadlines+=Deadline
		public Assignment getDeadlinesAssignment_5_3_1() { return cDeadlinesAssignment_5_3_1; }

		//Deadline
		public RuleCall getDeadlinesDeadlineParserRuleCall_5_3_1_0() { return cDeadlinesDeadlineParserRuleCall_5_3_1_0; }

		//("Rules" ":" rules+=Rule ("," rules+=Rule)*)?
		public Group getGroup_6() { return cGroup_6; }

		//"Rules"
		public Keyword getRulesKeyword_6_0() { return cRulesKeyword_6_0; }

		//":"
		public Keyword getColonKeyword_6_1() { return cColonKeyword_6_1; }

		//rules+=Rule
		public Assignment getRulesAssignment_6_2() { return cRulesAssignment_6_2; }

		//Rule
		public RuleCall getRulesRuleParserRuleCall_6_2_0() { return cRulesRuleParserRuleCall_6_2_0; }

		//("," rules+=Rule)*
		public Group getGroup_6_3() { return cGroup_6_3; }

		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }

		//rules+=Rule
		public Assignment getRulesAssignment_6_3_1() { return cRulesAssignment_6_3_1; }

		//Rule
		public RuleCall getRulesRuleParserRuleCall_6_3_1_0() { return cRulesRuleParserRuleCall_6_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class RuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Rule");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMajorityParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRatioMajorityParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cLeaderDrivenParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cPhasedRuleParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Rule:
		//
		//	Majority | RatioMajority | LeaderDriven | PhasedRule;
		public ParserRule getRule() { return rule; }

		//Majority | RatioMajority | LeaderDriven | PhasedRule
		public Alternatives getAlternatives() { return cAlternatives; }

		//Majority
		public RuleCall getMajorityParserRuleCall_0() { return cMajorityParserRuleCall_0; }

		//RatioMajority
		public RuleCall getRatioMajorityParserRuleCall_1() { return cRatioMajorityParserRuleCall_1; }

		//LeaderDriven
		public RuleCall getLeaderDrivenParserRuleCall_2() { return cLeaderDrivenParserRuleCall_2; }

		//PhasedRule
		public RuleCall getPhasedRuleParserRuleCall_3() { return cPhasedRuleParserRuleCall_3; }
	}

	public class RoleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Role");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Role:
		//
		//	name=ID;
		public ParserRule getRule() { return rule; }

		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}

	public class MajorityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Majority");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cMajorityKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cAppliedToKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cAppliedToAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cAppliedToCollaborationTypeEnumRuleCall_5_0 = (RuleCall)cAppliedToAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cLeftParenthesisKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final RuleCall cFilterParserRuleCall_6_1 = (RuleCall)cGroup_6.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Keyword cWhenKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cStageAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cStageStageTypeEnumRuleCall_8_0 = (RuleCall)cStageAssignment_8.eContents().get(0);
		private final Keyword cPeopleKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cPeopleAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final CrossReference cPeopleRoleCrossReference_10_0 = (CrossReference)cPeopleAssignment_10.eContents().get(0);
		private final RuleCall cPeopleRoleIDTerminalRuleCall_10_0_1 = (RuleCall)cPeopleRoleCrossReference_10_0.eContents().get(1);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cCommaKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cPeopleAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final CrossReference cPeopleRoleCrossReference_11_1_0 = (CrossReference)cPeopleAssignment_11_1.eContents().get(0);
		private final RuleCall cPeopleRoleIDTerminalRuleCall_11_1_0_1 = (RuleCall)cPeopleRoleCrossReference_11_1_0.eContents().get(1);
		private final Keyword cRangeKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cRangeAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cRangeRangeTypeEnumRuleCall_13_0 = (RuleCall)cRangeAssignment_13.eContents().get(0);
		private final Group cGroup_14 = (Group)cGroup.eContents().get(14);
		private final Keyword cMinVotesKeyword_14_0 = (Keyword)cGroup_14.eContents().get(0);
		private final Assignment cMinVotesAssignment_14_1 = (Assignment)cGroup_14.eContents().get(1);
		private final RuleCall cMinVotesINTTerminalRuleCall_14_1_0 = (RuleCall)cMinVotesAssignment_14_1.eContents().get(0);
		private final Keyword cDeadlineKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cDeadlineAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final CrossReference cDeadlineDeadlineCrossReference_16_0 = (CrossReference)cDeadlineAssignment_16.eContents().get(0);
		private final RuleCall cDeadlineDeadlineIDTerminalRuleCall_16_0_1 = (RuleCall)cDeadlineDeadlineCrossReference_16_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_17 = (Keyword)cGroup.eContents().get(17);
		
		//Majority:
		//
		//	name=ID ":" "Majority" "{" "applied to" appliedTo=CollaborationType ("(" Filter ")")? "when" stage=StageType "people"
		//
		//	people+=[Role] ("," people+=[Role])* "range" range=RangeType ("minVotes" minVotes=INT)? "deadline"
		//
		//	deadline=[Deadline] "}";
		public ParserRule getRule() { return rule; }

		//name=ID ":" "Majority" "{" "applied to" appliedTo=CollaborationType ("(" Filter ")")? "when" stage=StageType "people"
		//
		//people+=[Role] ("," people+=[Role])* "range" range=RangeType ("minVotes" minVotes=INT)? "deadline" deadline=[Deadline]
		//
		//"}"
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//"Majority"
		public Keyword getMajorityKeyword_2() { return cMajorityKeyword_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//"applied to"
		public Keyword getAppliedToKeyword_4() { return cAppliedToKeyword_4; }

		//appliedTo=CollaborationType
		public Assignment getAppliedToAssignment_5() { return cAppliedToAssignment_5; }

		//CollaborationType
		public RuleCall getAppliedToCollaborationTypeEnumRuleCall_5_0() { return cAppliedToCollaborationTypeEnumRuleCall_5_0; }

		//("(" Filter ")")?
		public Group getGroup_6() { return cGroup_6; }

		//"("
		public Keyword getLeftParenthesisKeyword_6_0() { return cLeftParenthesisKeyword_6_0; }

		//Filter
		public RuleCall getFilterParserRuleCall_6_1() { return cFilterParserRuleCall_6_1; }

		//")"
		public Keyword getRightParenthesisKeyword_6_2() { return cRightParenthesisKeyword_6_2; }

		//"when"
		public Keyword getWhenKeyword_7() { return cWhenKeyword_7; }

		//stage=StageType
		public Assignment getStageAssignment_8() { return cStageAssignment_8; }

		//StageType
		public RuleCall getStageStageTypeEnumRuleCall_8_0() { return cStageStageTypeEnumRuleCall_8_0; }

		//"people"
		public Keyword getPeopleKeyword_9() { return cPeopleKeyword_9; }

		//people+=[Role]
		public Assignment getPeopleAssignment_10() { return cPeopleAssignment_10; }

		//[Role]
		public CrossReference getPeopleRoleCrossReference_10_0() { return cPeopleRoleCrossReference_10_0; }

		//ID
		public RuleCall getPeopleRoleIDTerminalRuleCall_10_0_1() { return cPeopleRoleIDTerminalRuleCall_10_0_1; }

		//("," people+=[Role])*
		public Group getGroup_11() { return cGroup_11; }

		//","
		public Keyword getCommaKeyword_11_0() { return cCommaKeyword_11_0; }

		//people+=[Role]
		public Assignment getPeopleAssignment_11_1() { return cPeopleAssignment_11_1; }

		//[Role]
		public CrossReference getPeopleRoleCrossReference_11_1_0() { return cPeopleRoleCrossReference_11_1_0; }

		//ID
		public RuleCall getPeopleRoleIDTerminalRuleCall_11_1_0_1() { return cPeopleRoleIDTerminalRuleCall_11_1_0_1; }

		//"range"
		public Keyword getRangeKeyword_12() { return cRangeKeyword_12; }

		//range=RangeType
		public Assignment getRangeAssignment_13() { return cRangeAssignment_13; }

		//RangeType
		public RuleCall getRangeRangeTypeEnumRuleCall_13_0() { return cRangeRangeTypeEnumRuleCall_13_0; }

		//("minVotes" minVotes=INT)?
		public Group getGroup_14() { return cGroup_14; }

		//"minVotes"
		public Keyword getMinVotesKeyword_14_0() { return cMinVotesKeyword_14_0; }

		//minVotes=INT
		public Assignment getMinVotesAssignment_14_1() { return cMinVotesAssignment_14_1; }

		//INT
		public RuleCall getMinVotesINTTerminalRuleCall_14_1_0() { return cMinVotesINTTerminalRuleCall_14_1_0; }

		//"deadline"
		public Keyword getDeadlineKeyword_15() { return cDeadlineKeyword_15; }

		//deadline=[Deadline]
		public Assignment getDeadlineAssignment_16() { return cDeadlineAssignment_16; }

		//[Deadline]
		public CrossReference getDeadlineDeadlineCrossReference_16_0() { return cDeadlineDeadlineCrossReference_16_0; }

		//ID
		public RuleCall getDeadlineDeadlineIDTerminalRuleCall_16_0_1() { return cDeadlineDeadlineIDTerminalRuleCall_16_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_17() { return cRightCurlyBracketKeyword_17; }
	}

	public class RatioMajorityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RatioMajority");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cRatioKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cAppliedToKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Keyword cTaskKeyword_5_0 = (Keyword)cAlternatives_5.eContents().get(0);
		private final Keyword cPatchKeyword_5_1 = (Keyword)cAlternatives_5.eContents().get(1);
		private final Keyword cCommentKeyword_5_2 = (Keyword)cAlternatives_5.eContents().get(2);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cLeftParenthesisKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final RuleCall cFilterParserRuleCall_6_1 = (RuleCall)cGroup_6.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Keyword cWhenKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cStageAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cStageStageTypeEnumRuleCall_8_0 = (RuleCall)cStageAssignment_8.eContents().get(0);
		private final Keyword cPeopleKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cPeopleAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final CrossReference cPeopleRoleCrossReference_10_0 = (CrossReference)cPeopleAssignment_10.eContents().get(0);
		private final RuleCall cPeopleRoleIDTerminalRuleCall_10_0_1 = (RuleCall)cPeopleRoleCrossReference_10_0.eContents().get(1);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cCommaKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cPeopleAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final CrossReference cPeopleRoleCrossReference_11_1_0 = (CrossReference)cPeopleAssignment_11_1.eContents().get(0);
		private final RuleCall cPeopleRoleIDTerminalRuleCall_11_1_0_1 = (RuleCall)cPeopleRoleCrossReference_11_1_0.eContents().get(1);
		private final Keyword cRangeKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cRangeAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cRangeRangeTypeEnumRuleCall_13_0 = (RuleCall)cRangeAssignment_13.eContents().get(0);
		private final Group cGroup_14 = (Group)cGroup.eContents().get(14);
		private final Keyword cMinVotesKeyword_14_0 = (Keyword)cGroup_14.eContents().get(0);
		private final Assignment cMinVotesAssignment_14_1 = (Assignment)cGroup_14.eContents().get(1);
		private final RuleCall cMinVotesINTTerminalRuleCall_14_1_0 = (RuleCall)cMinVotesAssignment_14_1.eContents().get(0);
		private final Keyword cRatioKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cRatioAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cRatioFLOATTerminalRuleCall_16_0 = (RuleCall)cRatioAssignment_16.eContents().get(0);
		private final Keyword cDeadlineKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Assignment cDeadlineAssignment_18 = (Assignment)cGroup.eContents().get(18);
		private final CrossReference cDeadlineDeadlineCrossReference_18_0 = (CrossReference)cDeadlineAssignment_18.eContents().get(0);
		private final RuleCall cDeadlineDeadlineIDTerminalRuleCall_18_0_1 = (RuleCall)cDeadlineDeadlineCrossReference_18_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_19 = (Keyword)cGroup.eContents().get(19);
		
		//RatioMajority:
		//
		//	name=ID ":" "Ratio" "{" "applied to" ("Task" | "Patch" | "Comment") ("(" Filter ")")? "when" stage=StageType "people"
		//
		//	people+=[Role] ("," people+=[Role])* "range" range=RangeType ("minVotes" minVotes=INT)? "ratio" ratio=FLOAT
		//
		//	"deadline" deadline=[Deadline] "}";
		public ParserRule getRule() { return rule; }

		//name=ID ":" "Ratio" "{" "applied to" ("Task" | "Patch" | "Comment") ("(" Filter ")")? "when" stage=StageType "people"
		//
		//people+=[Role] ("," people+=[Role])* "range" range=RangeType ("minVotes" minVotes=INT)? "ratio" ratio=FLOAT "deadline"
		//
		//deadline=[Deadline] "}"
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//"Ratio"
		public Keyword getRatioKeyword_2() { return cRatioKeyword_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//"applied to"
		public Keyword getAppliedToKeyword_4() { return cAppliedToKeyword_4; }

		//"Task" | "Patch" | "Comment"
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//"Task"
		public Keyword getTaskKeyword_5_0() { return cTaskKeyword_5_0; }

		//"Patch"
		public Keyword getPatchKeyword_5_1() { return cPatchKeyword_5_1; }

		//"Comment"
		public Keyword getCommentKeyword_5_2() { return cCommentKeyword_5_2; }

		//("(" Filter ")")?
		public Group getGroup_6() { return cGroup_6; }

		//"("
		public Keyword getLeftParenthesisKeyword_6_0() { return cLeftParenthesisKeyword_6_0; }

		//Filter
		public RuleCall getFilterParserRuleCall_6_1() { return cFilterParserRuleCall_6_1; }

		//")"
		public Keyword getRightParenthesisKeyword_6_2() { return cRightParenthesisKeyword_6_2; }

		//"when"
		public Keyword getWhenKeyword_7() { return cWhenKeyword_7; }

		//stage=StageType
		public Assignment getStageAssignment_8() { return cStageAssignment_8; }

		//StageType
		public RuleCall getStageStageTypeEnumRuleCall_8_0() { return cStageStageTypeEnumRuleCall_8_0; }

		//"people"
		public Keyword getPeopleKeyword_9() { return cPeopleKeyword_9; }

		//people+=[Role]
		public Assignment getPeopleAssignment_10() { return cPeopleAssignment_10; }

		//[Role]
		public CrossReference getPeopleRoleCrossReference_10_0() { return cPeopleRoleCrossReference_10_0; }

		//ID
		public RuleCall getPeopleRoleIDTerminalRuleCall_10_0_1() { return cPeopleRoleIDTerminalRuleCall_10_0_1; }

		//("," people+=[Role])*
		public Group getGroup_11() { return cGroup_11; }

		//","
		public Keyword getCommaKeyword_11_0() { return cCommaKeyword_11_0; }

		//people+=[Role]
		public Assignment getPeopleAssignment_11_1() { return cPeopleAssignment_11_1; }

		//[Role]
		public CrossReference getPeopleRoleCrossReference_11_1_0() { return cPeopleRoleCrossReference_11_1_0; }

		//ID
		public RuleCall getPeopleRoleIDTerminalRuleCall_11_1_0_1() { return cPeopleRoleIDTerminalRuleCall_11_1_0_1; }

		//"range"
		public Keyword getRangeKeyword_12() { return cRangeKeyword_12; }

		//range=RangeType
		public Assignment getRangeAssignment_13() { return cRangeAssignment_13; }

		//RangeType
		public RuleCall getRangeRangeTypeEnumRuleCall_13_0() { return cRangeRangeTypeEnumRuleCall_13_0; }

		//("minVotes" minVotes=INT)?
		public Group getGroup_14() { return cGroup_14; }

		//"minVotes"
		public Keyword getMinVotesKeyword_14_0() { return cMinVotesKeyword_14_0; }

		//minVotes=INT
		public Assignment getMinVotesAssignment_14_1() { return cMinVotesAssignment_14_1; }

		//INT
		public RuleCall getMinVotesINTTerminalRuleCall_14_1_0() { return cMinVotesINTTerminalRuleCall_14_1_0; }

		//"ratio"
		public Keyword getRatioKeyword_15() { return cRatioKeyword_15; }

		//ratio=FLOAT
		public Assignment getRatioAssignment_16() { return cRatioAssignment_16; }

		//FLOAT
		public RuleCall getRatioFLOATTerminalRuleCall_16_0() { return cRatioFLOATTerminalRuleCall_16_0; }

		//"deadline"
		public Keyword getDeadlineKeyword_17() { return cDeadlineKeyword_17; }

		//deadline=[Deadline]
		public Assignment getDeadlineAssignment_18() { return cDeadlineAssignment_18; }

		//[Deadline]
		public CrossReference getDeadlineDeadlineCrossReference_18_0() { return cDeadlineDeadlineCrossReference_18_0; }

		//ID
		public RuleCall getDeadlineDeadlineIDTerminalRuleCall_18_0_1() { return cDeadlineDeadlineIDTerminalRuleCall_18_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_19() { return cRightCurlyBracketKeyword_19; }
	}

	public class LeaderDrivenElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LeaderDriven");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeaderDrivenKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cAppliedToKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Keyword cTaskKeyword_5_0 = (Keyword)cAlternatives_5.eContents().get(0);
		private final Keyword cPatchKeyword_5_1 = (Keyword)cAlternatives_5.eContents().get(1);
		private final Keyword cCommentKeyword_5_2 = (Keyword)cAlternatives_5.eContents().get(2);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cLeftParenthesisKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cFilterAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cFilterFilterParserRuleCall_6_1_0 = (RuleCall)cFilterAssignment_6_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Keyword cWhenKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cStageAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cStageStageTypeEnumRuleCall_8_0 = (RuleCall)cStageAssignment_8.eContents().get(0);
		private final Keyword cDefaultKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cDefaultAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final CrossReference cDefaultRuleCrossReference_10_0 = (CrossReference)cDefaultAssignment_10.eContents().get(0);
		private final RuleCall cDefaultRuleIDTerminalRuleCall_10_0_1 = (RuleCall)cDefaultRuleCrossReference_10_0.eContents().get(1);
		private final Keyword cDeadlineKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cDeadlineAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final CrossReference cDeadlineDeadlineCrossReference_12_0 = (CrossReference)cDeadlineAssignment_12.eContents().get(0);
		private final RuleCall cDeadlineDeadlineIDTerminalRuleCall_12_0_1 = (RuleCall)cDeadlineDeadlineCrossReference_12_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//LeaderDriven:
		//
		//	name=ID ":" "LeaderDriven" "{" "applied to" ("Task" | "Patch" | "Comment") ("(" filter=Filter ")")? "when"
		//
		//	stage=StageType "default" default=[Rule] "deadline" deadline=[Deadline] "}";
		public ParserRule getRule() { return rule; }

		//name=ID ":" "LeaderDriven" "{" "applied to" ("Task" | "Patch" | "Comment") ("(" filter=Filter ")")? "when"
		//
		//stage=StageType "default" default=[Rule] "deadline" deadline=[Deadline] "}"
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//"LeaderDriven"
		public Keyword getLeaderDrivenKeyword_2() { return cLeaderDrivenKeyword_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//"applied to"
		public Keyword getAppliedToKeyword_4() { return cAppliedToKeyword_4; }

		//"Task" | "Patch" | "Comment"
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//"Task"
		public Keyword getTaskKeyword_5_0() { return cTaskKeyword_5_0; }

		//"Patch"
		public Keyword getPatchKeyword_5_1() { return cPatchKeyword_5_1; }

		//"Comment"
		public Keyword getCommentKeyword_5_2() { return cCommentKeyword_5_2; }

		//("(" filter=Filter ")")?
		public Group getGroup_6() { return cGroup_6; }

		//"("
		public Keyword getLeftParenthesisKeyword_6_0() { return cLeftParenthesisKeyword_6_0; }

		//filter=Filter
		public Assignment getFilterAssignment_6_1() { return cFilterAssignment_6_1; }

		//Filter
		public RuleCall getFilterFilterParserRuleCall_6_1_0() { return cFilterFilterParserRuleCall_6_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_6_2() { return cRightParenthesisKeyword_6_2; }

		//"when"
		public Keyword getWhenKeyword_7() { return cWhenKeyword_7; }

		//stage=StageType
		public Assignment getStageAssignment_8() { return cStageAssignment_8; }

		//StageType
		public RuleCall getStageStageTypeEnumRuleCall_8_0() { return cStageStageTypeEnumRuleCall_8_0; }

		//"default"
		public Keyword getDefaultKeyword_9() { return cDefaultKeyword_9; }

		//default=[Rule]
		public Assignment getDefaultAssignment_10() { return cDefaultAssignment_10; }

		//[Rule]
		public CrossReference getDefaultRuleCrossReference_10_0() { return cDefaultRuleCrossReference_10_0; }

		//ID
		public RuleCall getDefaultRuleIDTerminalRuleCall_10_0_1() { return cDefaultRuleIDTerminalRuleCall_10_0_1; }

		//"deadline"
		public Keyword getDeadlineKeyword_11() { return cDeadlineKeyword_11; }

		//deadline=[Deadline]
		public Assignment getDeadlineAssignment_12() { return cDeadlineAssignment_12; }

		//[Deadline]
		public CrossReference getDeadlineDeadlineCrossReference_12_0() { return cDeadlineDeadlineCrossReference_12_0; }

		//ID
		public RuleCall getDeadlineDeadlineIDTerminalRuleCall_12_0_1() { return cDeadlineDeadlineIDTerminalRuleCall_12_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}

	public class PhasedRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PhasedRule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cRatioKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cPhasesKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cPhasesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cPhasesRuleCrossReference_6_0 = (CrossReference)cPhasesAssignment_6.eContents().get(0);
		private final RuleCall cPhasesRuleIDTerminalRuleCall_6_0_1 = (RuleCall)cPhasesRuleCrossReference_6_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//PhasedRule:
		//
		//	name=ID ":" "Ratio" "{" "phases" "{" phases+=[Rule]* "}" "}";
		public ParserRule getRule() { return rule; }

		//name=ID ":" "Ratio" "{" "phases" "{" phases+=[Rule]* "}" "}"
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//"Ratio"
		public Keyword getRatioKeyword_2() { return cRatioKeyword_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//"phases"
		public Keyword getPhasesKeyword_4() { return cPhasesKeyword_4; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//phases+=[Rule]*
		public Assignment getPhasesAssignment_6() { return cPhasesAssignment_6; }

		//[Rule]
		public CrossReference getPhasesRuleCrossReference_6_0() { return cPhasesRuleCrossReference_6_0; }

		//ID
		public RuleCall getPhasesRuleIDTerminalRuleCall_6_0_1() { return cPhasesRuleIDTerminalRuleCall_6_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class FilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Filter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Alternatives cAlternatives_0_1 = (Alternatives)cGroup_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_0_1_0 = (Keyword)cAlternatives_0_1.eContents().get(0);
		private final Keyword cExclamationMarkEqualsSignKeyword_0_1_1 = (Keyword)cAlternatives_0_1.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0_2 = (RuleCall)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Alternatives cAlternatives_1_2 = (Alternatives)cGroup_1.eContents().get(2);
		private final Keyword cEqualsSignKeyword_1_2_0 = (Keyword)cAlternatives_1_2.eContents().get(0);
		private final Keyword cExclamationMarkEqualsSignKeyword_1_2_1 = (Keyword)cAlternatives_1_2.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_1_3 = (RuleCall)cGroup_1.eContents().get(3);
		
		//Filter:
		//
		//	(ID ("=" | "!=") ID) ("," ID ("=" | "!=") ID)?;
		public ParserRule getRule() { return rule; }

		//(ID ("=" | "!=") ID) ("," ID ("=" | "!=") ID)?
		public Group getGroup() { return cGroup; }

		//ID ("=" | "!=") ID
		public Group getGroup_0() { return cGroup_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_0_0() { return cIDTerminalRuleCall_0_0; }

		//"=" | "!="
		public Alternatives getAlternatives_0_1() { return cAlternatives_0_1; }

		//"="
		public Keyword getEqualsSignKeyword_0_1_0() { return cEqualsSignKeyword_0_1_0; }

		//"!="
		public Keyword getExclamationMarkEqualsSignKeyword_0_1_1() { return cExclamationMarkEqualsSignKeyword_0_1_1; }

		//ID
		public RuleCall getIDTerminalRuleCall_0_2() { return cIDTerminalRuleCall_0_2; }

		//("," ID ("=" | "!=") ID)?
		public Group getGroup_1() { return cGroup_1; }

		//","
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }

		//"=" | "!="
		public Alternatives getAlternatives_1_2() { return cAlternatives_1_2; }

		//"="
		public Keyword getEqualsSignKeyword_1_2_0() { return cEqualsSignKeyword_1_2_0; }

		//"!="
		public Keyword getExclamationMarkEqualsSignKeyword_1_2_1() { return cExclamationMarkEqualsSignKeyword_1_2_1; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_3() { return cIDTerminalRuleCall_1_3; }
	}

	public class DeadlineElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Deadline");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTimerParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cWaitForVoteParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cOCLConditionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Deadline:
		//
		//	Timer | WaitForVote | OCLCondition;
		public ParserRule getRule() { return rule; }

		//Timer | WaitForVote | OCLCondition
		public Alternatives getAlternatives() { return cAlternatives; }

		//Timer
		public RuleCall getTimerParserRuleCall_0() { return cTimerParserRuleCall_0; }

		//WaitForVote
		public RuleCall getWaitForVoteParserRuleCall_1() { return cWaitForVoteParserRuleCall_1; }

		//OCLCondition
		public RuleCall getOCLConditionParserRuleCall_2() { return cOCLConditionParserRuleCall_2; }
	}

	public class TimerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Timer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTimerAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTimeStampAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTimeStampINTTerminalRuleCall_3_0 = (RuleCall)cTimeStampAssignment_3.eContents().get(0);
		private final Keyword cDaysKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Timer:
		//
		//	{Timer} name=ID ":" timeStamp=INT "days";
		public ParserRule getRule() { return rule; }

		//{Timer} name=ID ":" timeStamp=INT "days"
		public Group getGroup() { return cGroup; }

		//{Timer}
		public Action getTimerAction_0() { return cTimerAction_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//timeStamp=INT
		public Assignment getTimeStampAssignment_3() { return cTimeStampAssignment_3; }

		//INT
		public RuleCall getTimeStampINTTerminalRuleCall_3_0() { return cTimeStampINTTerminalRuleCall_3_0; }

		//"days"
		public Keyword getDaysKeyword_4() { return cDaysKeyword_4; }
	}

	public class OCLConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OCLCondition");
		private final Assignment cOclExpressionAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOclExpressionSTRINGTerminalRuleCall_0 = (RuleCall)cOclExpressionAssignment.eContents().get(0);
		
		//OCLCondition:
		//
		//	oclExpression=STRING;
		public ParserRule getRule() { return rule; }

		//oclExpression=STRING
		public Assignment getOclExpressionAssignment() { return cOclExpressionAssignment; }

		//STRING
		public RuleCall getOclExpressionSTRINGTerminalRuleCall_0() { return cOclExpressionSTRINGTerminalRuleCall_0; }
	}

	public class WaitForVoteElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "WaitForVote");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cRolesAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cRolesRoleCrossReference_0_0 = (CrossReference)cRolesAssignment_0.eContents().get(0);
		private final RuleCall cRolesRoleIDTerminalRuleCall_0_0_1 = (RuleCall)cRolesRoleCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cRolesAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cRolesRoleCrossReference_1_1_0 = (CrossReference)cRolesAssignment_1_1.eContents().get(0);
		private final RuleCall cRolesRoleIDTerminalRuleCall_1_1_0_1 = (RuleCall)cRolesRoleCrossReference_1_1_0.eContents().get(1);
		
		//WaitForVote:
		//
		//	roles+=[Role] ("," roles+=[Role])*;
		public ParserRule getRule() { return rule; }

		//roles+=[Role] ("," roles+=[Role])*
		public Group getGroup() { return cGroup; }

		//roles+=[Role]
		public Assignment getRolesAssignment_0() { return cRolesAssignment_0; }

		//[Role]
		public CrossReference getRolesRoleCrossReference_0_0() { return cRolesRoleCrossReference_0_0; }

		//ID
		public RuleCall getRolesRoleIDTerminalRuleCall_0_0_1() { return cRolesRoleIDTerminalRuleCall_0_0_1; }

		//("," roles+=[Role])*
		public Group getGroup_1() { return cGroup_1; }

		//","
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }

		//roles+=[Role]
		public Assignment getRolesAssignment_1_1() { return cRolesAssignment_1_1; }

		//[Role]
		public CrossReference getRolesRoleCrossReference_1_1_0() { return cRolesRoleCrossReference_1_1_0; }

		//ID
		public RuleCall getRolesRoleIDTerminalRuleCall_1_1_0_1() { return cRolesRoleIDTerminalRuleCall_1_1_0_1; }
	}
	
	
	public class CollaborationTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "CollaborationType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cTASKEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cTASKTaskKeyword_0_0 = (Keyword)cTASKEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPATCHEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPATCHPatchKeyword_1_0 = (Keyword)cPATCHEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cCOMMENTEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cCOMMENTCommentKeyword_2_0 = (Keyword)cCOMMENTEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum CollaborationType:
		//
		//	TASK="Task" | PATCH="Patch" | COMMENT="Comment";
		public EnumRule getRule() { return rule; }

		//TASK="Task" | PATCH="Patch" | COMMENT="Comment"
		public Alternatives getAlternatives() { return cAlternatives; }

		//TASK="Task"
		public EnumLiteralDeclaration getTASKEnumLiteralDeclaration_0() { return cTASKEnumLiteralDeclaration_0; }

		//"Task"
		public Keyword getTASKTaskKeyword_0_0() { return cTASKTaskKeyword_0_0; }

		//PATCH="Patch"
		public EnumLiteralDeclaration getPATCHEnumLiteralDeclaration_1() { return cPATCHEnumLiteralDeclaration_1; }

		//"Patch"
		public Keyword getPATCHPatchKeyword_1_0() { return cPATCHPatchKeyword_1_0; }

		//COMMENT="Comment"
		public EnumLiteralDeclaration getCOMMENTEnumLiteralDeclaration_2() { return cCOMMENTEnumLiteralDeclaration_2; }

		//"Comment"
		public Keyword getCOMMENTCommentKeyword_2_0() { return cCOMMENTCommentKeyword_2_0; }
	}

	public class StageTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "StageType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cTASK_REVIEWEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cTASK_REVIEWTaskReviewKeyword_0_0 = (Keyword)cTASK_REVIEWEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPATCH_REVIEWEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPATCH_REVIEWPatchReviewKeyword_1_0 = (Keyword)cPATCH_REVIEWEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cRELEASEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cRELEASEReleaseKeyword_2_0 = (Keyword)cRELEASEEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum StageType:
		//
		//	TASK_REVIEW="TaskReview" | PATCH_REVIEW="PatchReview" | RELEASE="Release";
		public EnumRule getRule() { return rule; }

		//TASK_REVIEW="TaskReview" | PATCH_REVIEW="PatchReview" | RELEASE="Release"
		public Alternatives getAlternatives() { return cAlternatives; }

		//TASK_REVIEW="TaskReview"
		public EnumLiteralDeclaration getTASK_REVIEWEnumLiteralDeclaration_0() { return cTASK_REVIEWEnumLiteralDeclaration_0; }

		//"TaskReview"
		public Keyword getTASK_REVIEWTaskReviewKeyword_0_0() { return cTASK_REVIEWTaskReviewKeyword_0_0; }

		//PATCH_REVIEW="PatchReview"
		public EnumLiteralDeclaration getPATCH_REVIEWEnumLiteralDeclaration_1() { return cPATCH_REVIEWEnumLiteralDeclaration_1; }

		//"PatchReview"
		public Keyword getPATCH_REVIEWPatchReviewKeyword_1_0() { return cPATCH_REVIEWPatchReviewKeyword_1_0; }

		//RELEASE="Release"
		public EnumLiteralDeclaration getRELEASEEnumLiteralDeclaration_2() { return cRELEASEEnumLiteralDeclaration_2; }

		//"Release"
		public Keyword getRELEASEReleaseKeyword_2_0() { return cRELEASEReleaseKeyword_2_0; }
	}

	public class RangeTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "RangeType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPRESENTEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPRESENTPresentKeyword_0_0 = (Keyword)cPRESENTEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cQUALIFIEDEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cQUALIFIEDQualifiedKeyword_1_0 = (Keyword)cQUALIFIEDEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum RangeType:
		//
		//	PRESENT="Present" | QUALIFIED="Qualified";
		public EnumRule getRule() { return rule; }

		//PRESENT="Present" | QUALIFIED="Qualified"
		public Alternatives getAlternatives() { return cAlternatives; }

		//PRESENT="Present"
		public EnumLiteralDeclaration getPRESENTEnumLiteralDeclaration_0() { return cPRESENTEnumLiteralDeclaration_0; }

		//"Present"
		public Keyword getPRESENTPresentKeyword_0_0() { return cPRESENTPresentKeyword_0_0; }

		//QUALIFIED="Qualified"
		public EnumLiteralDeclaration getQUALIFIEDEnumLiteralDeclaration_1() { return cQUALIFIEDEnumLiteralDeclaration_1; }

		//"Qualified"
		public Keyword getQUALIFIEDQualifiedKeyword_1_0() { return cQUALIFIEDQualifiedKeyword_1_0; }
	}
	
	private ProjectElements pProject;
	private RuleElements pRule;
	private RoleElements pRole;
	private MajorityElements pMajority;
	private RatioMajorityElements pRatioMajority;
	private LeaderDrivenElements pLeaderDriven;
	private PhasedRuleElements pPhasedRule;
	private FilterElements pFilter;
	private DeadlineElements pDeadline;
	private TimerElements pTimer;
	private OCLConditionElements pOCLCondition;
	private WaitForVoteElements pWaitForVote;
	private CollaborationTypeElements unknownRuleCollaborationType;
	private StageTypeElements unknownRuleStageType;
	private RangeTypeElements unknownRuleRangeType;
	private TerminalRule tFLOAT;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public StrategyGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("fr.inria.atlanmod.governance.Strategy".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Project:
	//
	//	{Project} "Project" name=ID "{" ("Roles" ":" roles+=Role ("," roles+=Role)*)? ("Deadlines" ":" deadlines+=Deadline
	//
	//	("," deadlines+=Deadline)*)? ("Rules" ":" rules+=Rule ("," rules+=Rule)*)? "}";
	public ProjectElements getProjectAccess() {
		return (pProject != null) ? pProject : (pProject = new ProjectElements());
	}
	
	public ParserRule getProjectRule() {
		return getProjectAccess().getRule();
	}

	//Rule:
	//
	//	Majority | RatioMajority | LeaderDriven | PhasedRule;
	public RuleElements getRuleAccess() {
		return (pRule != null) ? pRule : (pRule = new RuleElements());
	}
	
	public ParserRule getRuleRule() {
		return getRuleAccess().getRule();
	}

	//Role:
	//
	//	name=ID;
	public RoleElements getRoleAccess() {
		return (pRole != null) ? pRole : (pRole = new RoleElements());
	}
	
	public ParserRule getRoleRule() {
		return getRoleAccess().getRule();
	}

	//Majority:
	//
	//	name=ID ":" "Majority" "{" "applied to" appliedTo=CollaborationType ("(" Filter ")")? "when" stage=StageType "people"
	//
	//	people+=[Role] ("," people+=[Role])* "range" range=RangeType ("minVotes" minVotes=INT)? "deadline"
	//
	//	deadline=[Deadline] "}";
	public MajorityElements getMajorityAccess() {
		return (pMajority != null) ? pMajority : (pMajority = new MajorityElements());
	}
	
	public ParserRule getMajorityRule() {
		return getMajorityAccess().getRule();
	}

	//RatioMajority:
	//
	//	name=ID ":" "Ratio" "{" "applied to" ("Task" | "Patch" | "Comment") ("(" Filter ")")? "when" stage=StageType "people"
	//
	//	people+=[Role] ("," people+=[Role])* "range" range=RangeType ("minVotes" minVotes=INT)? "ratio" ratio=FLOAT
	//
	//	"deadline" deadline=[Deadline] "}";
	public RatioMajorityElements getRatioMajorityAccess() {
		return (pRatioMajority != null) ? pRatioMajority : (pRatioMajority = new RatioMajorityElements());
	}
	
	public ParserRule getRatioMajorityRule() {
		return getRatioMajorityAccess().getRule();
	}

	//LeaderDriven:
	//
	//	name=ID ":" "LeaderDriven" "{" "applied to" ("Task" | "Patch" | "Comment") ("(" filter=Filter ")")? "when"
	//
	//	stage=StageType "default" default=[Rule] "deadline" deadline=[Deadline] "}";
	public LeaderDrivenElements getLeaderDrivenAccess() {
		return (pLeaderDriven != null) ? pLeaderDriven : (pLeaderDriven = new LeaderDrivenElements());
	}
	
	public ParserRule getLeaderDrivenRule() {
		return getLeaderDrivenAccess().getRule();
	}

	//PhasedRule:
	//
	//	name=ID ":" "Ratio" "{" "phases" "{" phases+=[Rule]* "}" "}";
	public PhasedRuleElements getPhasedRuleAccess() {
		return (pPhasedRule != null) ? pPhasedRule : (pPhasedRule = new PhasedRuleElements());
	}
	
	public ParserRule getPhasedRuleRule() {
		return getPhasedRuleAccess().getRule();
	}

	//Filter:
	//
	//	(ID ("=" | "!=") ID) ("," ID ("=" | "!=") ID)?;
	public FilterElements getFilterAccess() {
		return (pFilter != null) ? pFilter : (pFilter = new FilterElements());
	}
	
	public ParserRule getFilterRule() {
		return getFilterAccess().getRule();
	}

	//Deadline:
	//
	//	Timer | WaitForVote | OCLCondition;
	public DeadlineElements getDeadlineAccess() {
		return (pDeadline != null) ? pDeadline : (pDeadline = new DeadlineElements());
	}
	
	public ParserRule getDeadlineRule() {
		return getDeadlineAccess().getRule();
	}

	//Timer:
	//
	//	{Timer} name=ID ":" timeStamp=INT "days";
	public TimerElements getTimerAccess() {
		return (pTimer != null) ? pTimer : (pTimer = new TimerElements());
	}
	
	public ParserRule getTimerRule() {
		return getTimerAccess().getRule();
	}

	//OCLCondition:
	//
	//	oclExpression=STRING;
	public OCLConditionElements getOCLConditionAccess() {
		return (pOCLCondition != null) ? pOCLCondition : (pOCLCondition = new OCLConditionElements());
	}
	
	public ParserRule getOCLConditionRule() {
		return getOCLConditionAccess().getRule();
	}

	//WaitForVote:
	//
	//	roles+=[Role] ("," roles+=[Role])*;
	public WaitForVoteElements getWaitForVoteAccess() {
		return (pWaitForVote != null) ? pWaitForVote : (pWaitForVote = new WaitForVoteElements());
	}
	
	public ParserRule getWaitForVoteRule() {
		return getWaitForVoteAccess().getRule();
	}

	//enum CollaborationType:
	//
	//	TASK="Task" | PATCH="Patch" | COMMENT="Comment";
	public CollaborationTypeElements getCollaborationTypeAccess() {
		return (unknownRuleCollaborationType != null) ? unknownRuleCollaborationType : (unknownRuleCollaborationType = new CollaborationTypeElements());
	}
	
	public EnumRule getCollaborationTypeRule() {
		return getCollaborationTypeAccess().getRule();
	}

	//enum StageType:
	//
	//	TASK_REVIEW="TaskReview" | PATCH_REVIEW="PatchReview" | RELEASE="Release";
	public StageTypeElements getStageTypeAccess() {
		return (unknownRuleStageType != null) ? unknownRuleStageType : (unknownRuleStageType = new StageTypeElements());
	}
	
	public EnumRule getStageTypeRule() {
		return getStageTypeAccess().getRule();
	}

	//enum RangeType:
	//
	//	PRESENT="Present" | QUALIFIED="Qualified";
	public RangeTypeElements getRangeTypeAccess() {
		return (unknownRuleRangeType != null) ? unknownRuleRangeType : (unknownRuleRangeType = new RangeTypeElements());
	}
	
	public EnumRule getRangeTypeRule() {
		return getRangeTypeAccess().getRule();
	}

	//terminal FLOAT returns ecore::EFloat:
	//
	//	("-" | "+")? (INT "." INT | "." INT | INT ".") ("e" ("-" | "+") INT)? | "1";
	public TerminalRule getFLOATRule() {
		return (tFLOAT != null) ? tFLOAT : (tFLOAT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "FLOAT"));
	} 

	//terminal ID:
	//
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
